/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * WhirlpoolWindow.java
 *
 * Created on Dec 22, 2011, 11:29:55 PM
 */
package com.jericbryledy.whirlpool.app;

import com.jericbryledy.whirlpool.bean.Question;
import com.jericbryledy.whirlpool.bean.WhirlpoolTreeItem;
import com.jericbryledy.whirlpool.dao.QuestionDao;
import java.awt.Desktop;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreePath;

/**
 *
 * @author Jeric Bryle Sy Dy
 */
public class WhirlpoolWindow extends javax.swing.JFrame {

	private QuestionDao questionDao;
	private WhirlpoolTreeItem curTreeItem;
	private String curVideoPath;
	private Question curQuestion;

	public WhirlpoolWindow() {
		questionDao = new QuestionDao();

		initComponents();
		navigator.addMouseListener(new MouseListener() {

			public void mouseClicked(MouseEvent e) {
				TreePath path = navigator.getSelectionPath();
				if (path == null) {
					curVideoPath = null;
					triggerVideoPathChanged();
				} else {
					DefaultMutableTreeNode node = (DefaultMutableTreeNode) path.getLastPathComponent();
					if (node.getUserObject() instanceof WhirlpoolTreeItem) {
						curTreeItem = (WhirlpoolTreeItem) node.getUserObject();
						String selectedVideoPath = curTreeItem.getItemValue();
						if (selectedVideoPath == null) {
							curVideoPath = null;
							triggerVideoPathChanged();
						} else if (curVideoPath == null || !curVideoPath.equals(selectedVideoPath)) {
							curVideoPath = selectedVideoPath;
							triggerVideoPathChanged();
						}
					}
				}
			}

			public void mousePressed(MouseEvent e) {
			}

			public void mouseReleased(MouseEvent e) {
			}

			public void mouseEntered(MouseEvent e) {
			}

			public void mouseExited(MouseEvent e) {
			}
		});
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        navigator = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        launchVideoButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        videoPathLabel = new javax.swing.JLabel();
        displayProblemButton = new javax.swing.JToggleButton();
        questionPane = new com.jericbryledy.whirlpool.app.QuestionPanel();
        doneButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSplitPane1.setDividerLocation(200);

        navigator.setModel(new com.jericbryledy.whirlpool.app.NavigatorModelFactory().generate());
        jScrollPane1.setViewportView(navigator);

        jSplitPane1.setLeftComponent(jScrollPane1);

        launchVideoButton.setText("Launch Video");
        launchVideoButton.setEnabled(false);
        launchVideoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                launchVideoButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("file:");

        displayProblemButton.setText("Display Problem");
        displayProblemButton.setEnabled(false);
        displayProblemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayProblemButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout questionPaneLayout = new javax.swing.GroupLayout(questionPane);
        questionPane.setLayout(questionPaneLayout);
        questionPaneLayout.setHorizontalGroup(
            questionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        questionPaneLayout.setVerticalGroup(
            questionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        doneButton.setText("Done");
        doneButton.setEnabled(false);
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(launchVideoButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(videoPathLabel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(displayProblemButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(doneButton))
                    .addComponent(questionPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(597, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(launchVideoButton)
                    .addComponent(jLabel1)
                    .addComponent(videoPathLabel))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayProblemButton)
                    .addComponent(doneButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(questionPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(373, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(jPanel1);

        jSplitPane1.setRightComponent(jScrollPane2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 996, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 563, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void launchVideoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_launchVideoButtonActionPerformed
		// no idea how to make mp4 files work with JMF (downloaded videos from youtube are mp4)
		// maybe convert mp4 into supported format instead?
		// or open with system/local media player?
//		Player player = Manager.createPlayer(new URL("file", null, curVideoPath.replaceAll(" ", "%20")));
//		player.start();

		try {
			Desktop.getDesktop().open(new File(curVideoPath));
		} catch (IOException ex) {
			JOptionPane.showMessageDialog(this, "No file associated with format: " + curVideoPath.substring(curVideoPath.lastIndexOf(".")));
		} catch (IllegalArgumentException ex) {
			JOptionPane.showMessageDialog(this, "File not found: " + curVideoPath);
		}
	}//GEN-LAST:event_launchVideoButtonActionPerformed

	private void displayProblemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayProblemButtonActionPerformed
		if (displayProblemButton.isSelected()) {
			questionPane.setup(curQuestion);
			doneButton.setEnabled(true);
		} else {
			questionPane.clear();
			doneButton.setEnabled(false);
		}
	}//GEN-LAST:event_displayProblemButtonActionPerformed

	private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
//		for (InputAdaptor adaptor : inputAdaptors) {
//			System.out.println(adaptor.getName() + ": " + adaptor.getValue());
//		}
	}//GEN-LAST:event_doneButtonActionPerformed

	private void triggerVideoPathChanged() {
		if (curVideoPath == null) {
			videoPathLabel.setText("");
			launchVideoButton.setEnabled(false);
		} else {
			videoPathLabel.setText(curVideoPath);
			launchVideoButton.setEnabled(true);
			curQuestion = questionDao.getByLectureId(curTreeItem.getItemId());
			displayProblemButton.setSelected(false);

			displayProblemButton.setEnabled(curQuestion != null);
		}
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		try {
			javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
		} catch (Exception ex) {
			java.util.logging.Logger.getLogger(WhirlpoolWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {

			public void run() {
				new WhirlpoolWindow().setVisible(true);
			}
		});
	}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton displayProblemButton;
    private javax.swing.JButton doneButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JButton launchVideoButton;
    private javax.swing.JTree navigator;
    private com.jericbryledy.whirlpool.app.QuestionPanel questionPane;
    private javax.swing.JLabel videoPathLabel;
    // End of variables declaration//GEN-END:variables
}
